[comment encoding = UTF-8 /]
[module toLTL('http://simplepdl')]


[template public simplePDLToLTL(aProcess : Process)]
[comment @main/]
[file (aProcess.name + 'inv.ltl', false, 'UTF-8')]
[let wds : OrderedSet(WorkDefinition) = aProcess.getWDs() ] 
	[if (wds->size() > 0)]
		[for (wd : WorkDefinition | wds)]
['[]'/] ['('/][wd.name+'_ready'/]+ [wd.name+'_running'/] + [wd.name+'_finished'/] = 1[')'/]
['[]'/] ['('/][wd.name+'_starting'/] + [wd.name+'_finishing'/] = 1[')'/]
['[]'/] ['('/][wd.name+'_started'/] => ['[]'/] [wd.name+'_started'/][')'/]
['[]'/] ['('/][wd.name+'_finished'/] => ['[]'/] [wd.name+'_finished'/][')'/]
['[]'/] ['('/][wd.name+'_finished'/] => ['[]'/] [wd.name+'_started'/][')'/]
			[if (wd.askedRessource->size() > 0)]
				[for (link : AskedRessource |wd.askedRessource)]
['[]'/] ['('/][link.workActivity.name+'_finished'/] => [link.ressource.name+'_free'/] = [link.ressource.stock/] [')'/]
				[/for]
			[/if]
		[/for]
	[/if]
[/let]

[/file]

[file (aProcess.name + 'ferm.ltl', false, 'UTF-8')]
[let wds : OrderedSet(WorkDefinition) = aProcess.getWDs() ] 
	[if (wds->size() > 0)]
		[for (wd : WorkDefinition | wds)]
['[]'/] ['('/][wd.name+'_finished'/] = 1[')'/]
['[]'/] ['('/][wd.name+'_started'/] = 1[')'/]
['[]'/] ['('/][wd.name+'_ready'/] + [wd.name+'_running'/] + [wd.name+'_starting'/] + [wd.name+'_finishing'/] = 0[')'/]
		[/for]
	[/if]
[/let]
[let Resss : OrderedSet(Ressource) = aProcess.getRessources() ] 
	[if (Resss->size() > 0)]
		[for (Ress : Ressource | Resss)]
['[]'/] ['('/][Ress.name+'_free'/] = [Ress.stock/][')'/]
		[/for]
	[/if]
[/let]

[/file]
[/template]

[query public getWDs(p: Process) : OrderedSet(WorkDefinition) = 
	p.processElements->select( e | e.oclIsTypeOf(WorkDefinition) )
		->collect( e | e.oclAsType(WorkDefinition) )
		->asOrderedSet()
/]

[query public getRessources(p: Process) : OrderedSet(Ressource) = 
	p.processElements->select( e | e.oclIsTypeOf(Ressource) )
		->collect( e | e.oclAsType(Ressource) )
		->asOrderedSet()
/]


